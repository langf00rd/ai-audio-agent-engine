-- 1. Create users table
CREATE TABLE public.users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  email VARCHAR NULL,
  password TEXT NULL,
  first_name TEXT NULL,
  last_name TEXT NULL,
  CONSTRAINT users_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

-- 2. Create tagged_conversations table (no dependencies)
CREATE TABLE public.tagged_conversations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  session_id UUID NULL,
  user_info JSONB NULL,
  intent VARCHAR NULL,
  summary TEXT NULL,
  lead_quality VARCHAR NULL,
  next_step VARCHAR NULL,
  confidence DOUBLE PRECISION NULL,
  metadata JSONB NULL,
  CONSTRAINT conversations_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

-- 3. Create analytics table (depends on users)
CREATE TABLE public.analytics (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  type TEXT NULL,
  user_id BIGINT NULL,
  metadata JSONB NULL,
  CONSTRAINT analytics_pkey PRIMARY KEY (id),
  CONSTRAINT analytics_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id)
) TABLESPACE pg_default;

-- 4. Create agents table (depends on users)
CREATE TABLE public.agents (
  id SERIAL NOT NULL,
  name TEXT NOT NULL,
  description TEXT NULL,
  business_name TEXT NULL,
  business_slogan TEXT NULL,
  brand_voice TEXT NULL,
  support_contact JSONB NULL DEFAULT '{}'::jsonb,
  custom_interactions JSONB NULL DEFAULT '{}'::jsonb,
  service JSONB NULL DEFAULT '[]'::jsonb,
  faqs JSONB NULL DEFAULT '[]'::jsonb,
  other_info TEXT NULL,
  created_at TIMESTAMPTZ NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NULL DEFAULT NOW(),
  is_public BOOLEAN NOT NULL DEFAULT FALSE,
  user_id BIGINT NULL,
  CONSTRAINT agents_pkey PRIMARY KEY (id),
  CONSTRAINT agents_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) ON UPDATE CASCADE ON DELETE CASCADE
) TABLESPACE pg_default;

-- enter postgres cli
-- sudo -u postgres psql

-- create role
-- CREATE ROLE <user> WITH LOGIN PASSWORD <password>; CREATE DATABASE main OWNER <user>;
-- grant permissions
-- GRANT SELECT, INSERT, UPDATE, DELETE ON TABLE public.agents TO <user>;
-- GRANT USAGE, SELECT ON SEQUENCE agents_id_seq TO <user>;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON TABLE public.tagged_conversations TO <user>;
